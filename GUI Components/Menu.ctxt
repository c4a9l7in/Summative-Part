#BlueJ class context
comment0.target=Menu
comment0.text=\n\ Menu\n\ <p>\n\ A\ GUI\ component\ that\ displays\ navigable\ items\ in\ a\ menu\ fashion.\ In\ that\ items\ can\ contain\ list\ of\ items.<p>\n\ Implements\ key\ combination\ shortcuts,\ enable/disable,\ checked\ status\ among\ individual\ item\ or\ groups\ of\ items.<p>\n\ Upper\ left\ corner\ can\ be\ pinned\ to\ a\ Point.<p>\n\ <p>\n\ Action\ listener\:\ getItemPressed()\n\ \n\ @author\ Taylor\ Born\n\ @version\ March\ 2011\ -\ April\ 2014\n
comment1.params=menuItems
comment1.target=Menu(java.util.ArrayList)
comment1.text=\n\ Create\ the\ Menu\ with\ the\ initial\ Menu\ "headings".\n\ @param\ menuItems\ This\ first\ list\ are\ the\ Menu\ items\ that\ are\ always\ displayed\ on\ the\ "top"\ \n\ bar.\ Menu\ items\ can\ be\ added\ to\ this\ "top"\ bar\ with\ the\ adding\ methods,\ just\ don't\ need\ \n\ parent\ Menu\ items\ when\ doing\ so.\n
comment10.params=address\ checked
comment10.target=void\ addToggleItem(java.lang.String,\ boolean)
comment10.text=\n\ Add\ an\ additional\ Menu\ item\ to\ the\ Menu\ that\ may\ be\ marked\ with\ and\ without\ a\ check\ mark.\ When\ clicking\n\ on\ this\ item,\ it\ will\ be\ marked\ if\ not\ marked,\ or\ unmarked\ if\ already\ marked.\n\ @param\ address\ Specify\ the\ path\ to\ the\ location\ to\ add\ something,\ with\ the\ item\ being\ \n\ added\ listed\ at\ the\ end.\ For\ example,\ to\ add\ "Square"\ in\ the\ list\ at\ "Insert/Shape",\ \n\ input\ this\:\ "Insert/Shape/Square".\ Note\ that\ the\ parent\ Menu\ items\ must\ exist.\n\ @param\ checked\ If\ the\ item\ will\ be\ initially\ marked\ with\ a\ check\ mark.\n
comment11.params=address\ menuItems
comment11.target=void\ addItems(java.lang.String,\ java.util.ArrayList)
comment11.text=\n\ Add\ multiple\ additional\ Menu\ items\ to\ the\ Menu\ into\ a\ single\ address.\n\ @param\ address\ The\ address\ for\ where\ to\ add\ the\ Menu\ items.\ For\ example,\ "Insert/Shape/"\ \n\ will\ specify\ to\ add\ the\ Menu\ items\ under\ "Shape".\ Note\ that\ these\ parent\ Menu\ items\ must\ exist.\n\ @param\ menuItems\ The\ list\ of\ Menu\ items\ to\ add\ to\ the\ Menu.\ For\ example,\ "Circle/"\ will\ add\n\ a\ Menu\ item\ with\ the\ name\ "Circle"\ at\ the\ location\ specified\ by\ the\ address\ param.\n\ @see\ \#addItem(String)\n
comment12.params=address\ items\ itemSelected
comment12.target=void\ addItemsAsSet(java.lang.String,\ java.util.ArrayList,\ int)
comment12.text=\n\ In\ addition\ to\ what\ addItems(String,\ ArrayList<String>)\ method\ does,\ the\ items\ added\ will\ belong\ to\ a\ set\ where\ one\ of\ them\ may\ be\ marked\ with\ a\ check\ mark.\n\ When\ one\ item\ is\ clicked,\ it\ will\ be\ marked\ with\ a\ check\ mark\ while\ the\ others\ will\ be\ unmarked.\n\ @param\ address\ The\ address\ for\ where\ to\ add\ the\ Menu\ items.\ For\ example,\ "Insert/Shape/"\ \n\ will\ specify\ to\ add\ the\ Menu\ items\ under\ "Shape".\ Note\ that\ these\ parent\ Menu\ items\ must\ exist.\n\ @param\ items\ The\ list\ of\ Menu\ items\ to\ add\ to\ the\ Menu.\ For\ example,\ "Circle/"\ will\ add\n\ a\ Menu\ item\ with\ the\ name\ "Circle"\ at\ the\ location\ specified\ by\ the\ address\ param.\n\ @param\ itemSelected\ The\ item\ that\ will\ be\ marked\ with\ a\ check\ mark\ initially.\ May\ be\ null.\n\ @see\ \#addItems(String,\ ArrayList)\n\ @see\ \#addToggleItem(String,\ boolean)\n
comment13.params=address\ shortCut
comment13.target=void\ addShortCut(java.lang.String,\ java.lang.String)
comment13.text=\n\ Create\ a\ shortcut\ to\ a\ specific\ item.\ This\ makes\ it\ not\ necessary\ to\ navigate\ through\ the\ Menu.\n\ @param\ address\ The\ location\ of\ item.\ For\ example\ "File/Print".\n\ @param\ shortCut\ Key\ combination\ that\ will\ provoke\ the\ call\ as\ though\ the\ item\ was\ clicked.\ Examples\:\ "ctrl+p",\ "ctrl+shift+up",\ "tab+5".\n
comment14.params=address
comment14.target=void\ provokeItem(java.lang.String)
comment14.text=\n\ Cause\ as\ though\ the\ specific\ item\ was\ clicked\ on.\ This\ is\ handy\ for\ when\ there\ are\ icons\n\ elsewhere\ that\ the\ user\ may\ press\ that\ should\ do\ the\ same\ thing\ and\ you\ would\ wish\ check\n\ marks\ to\ change\ in\ a\ set\ that\ the\ item\ belongs\ to.\ Note\ getItemPressed()\ will\ return\ as\n\ though\ this\ item\ was\ clicked.\n\ @param\ address\ The\ location\ of\ item.\ For\ example\ "File/Print".\n\ @see\ getItemPressed()\n
comment15.params=address\ enable
comment15.target=void\ enableItem(java.lang.String,\ boolean)
comment15.text=\n\ Change\ the\ enable\ state\ of\ an\ item.\n\ @param\ address\ The\ location\ of\ item.\n\ @param\ enable\ Whether\ the\ item\ will\ be\ enabled.\n
comment16.params=address
comment16.target=boolean\ isEnabled(java.lang.String)
comment16.text=\n\ \n
comment17.params=address
comment17.target=boolean\ isChecked(java.lang.String)
comment17.text=\n\ \n
comment18.params=address
comment18.target=Menu.MenuItem\ getItem(java.lang.String)
comment18.text=\n\ \n
comment19.params=
comment19.target=boolean\ isActive()
comment19.text=\n\ Whether\ the\ menu\ is\ being\ navigated\n\ @return\ Whether\ the\ menu\ is\ being\ navigated\n
comment2.params=menuItems\ p
comment2.target=Menu(java.util.ArrayList,\ java.awt.Point)
comment2.text=\n\ Create\ the\ Menu\ with\ the\ initial\ Menu\ "headings",\ with\ a\ top\ left\ desired\ origin\ position.\n\ @param\ menuItems\ This\ first\ list\ are\ the\ Menu\ items\ that\ are\ always\ displayed\ on\ the\ "top"\ \n\ bar.\ Menu\ items\ can\ be\ added\ to\ this\ "top"\ bar\ with\ the\ adding\ methods,\ just\ don't\ need\ \n\ parent\ Menu\ items\ when\ doing\ so.\n\ @param\ p\ Top\ left\ desired\ origin\ position.\ new\ Point(0,\ 0)\ will\ make\ sure\ the\ Menu\ is\ snug\ in\ the\ top\ left\ corner\ of\ the\ World\n
comment20.params=world
comment20.target=void\ addedToWorld(greenfoot.World)
comment20.text=\n\ \n
comment3.params=
comment3.target=int\ getGUIHeight()
comment4.params=
comment4.target=void\ act()
comment4.text=\n\ Act.\n
comment5.params=mi\ s
comment5.target=void\ checkForShortCuts(Menu.MenuItem,\ java.lang.String)
comment6.params=mi
comment6.target=void\ checkSets(Menu.MenuItem)
comment6.text=\n\ Mark\ MenuItem\ with\ a\ check,\ unchecking\ MenuItems\ within\ the\ same\ set.\n\ @param\ mi\ MenuItem\ to\ be\ marked.\n
comment7.params=
comment7.target=java.lang.String\ getItemPressed()
comment7.text=\n\ The\ action\ listener\ for\ the\ Menu.\n\ @return\ String\ representation\ of\ what\ Menu\ item\ was\ last\ clicked\ in\ the\ format\ of\ the\n\ path\ getting\ to\ it.\ For\ example\ if\ an\ "Arrow"\ Menu\ item\ was\ clicked\:\ "Insert/Shape/Arrow"\n
comment8.params=address
comment8.target=void\ addItem(java.lang.String)
comment8.text=\n\ Add\ an\ additional\ Menu\ item\ to\ the\ Menu.\n\ @param\ address\ Specify\ the\ path\ to\ the\ location\ to\ add\ something,\ with\ the\ item\ being\ \n\ added\ listed\ at\ the\ end.\ For\ example,\ to\ add\ "Square"\ in\ the\ list\ at\ "Insert/Shape",\ \n\ input\ this\:\ "Insert/Shape/Square".\ Note\ that\ the\ parent\ Menu\ items\ must\ exist.\n\ @see\ \#addItems(String,\ ArrayList)\n
comment9.params=address
comment9.target=void\ clearBranch(java.lang.String)
numComments=21
